spring.datasource.url = jdbc:mysql://carsecurity-mysql:3306/car_security?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Europe/Prague
spring.datasource.username = root
spring.datasource.password = NULL


logging.level.com.example.tomas.carsecurity = DEBUG

server.port=8080

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate
spring.datasource.initialization-mode=never

# oauth setting
oauth2.check.token.url = http://authorization-server:8081/oauth/check_token
auth.server.url = http://authorization-server:8081
oauth2.client.client-id = rest-client
oauth2.client.client-secret = secret
oauth2.resource-id = rest-client

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore.p12
# The password used to generate the certificate
server.ssl.key-store-password=<your-password>
# The alias mapped to the certificate
server.ssl.key-alias=tomcat
bing.map.key = <bing.key>
static.maps.upload.folder = <static.maps.folder>

# Mail settings
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#spring.mail.username=<mail username>
#spring.mail.password=<mail password>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


